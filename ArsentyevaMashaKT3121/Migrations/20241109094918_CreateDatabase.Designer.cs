// <auto-generated />
using ArsentyevaMashaKT3121.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ArsentyevaMashaKT3121.Migrations
{
    [DbContext(typeof(TeacherDbContext))]
    [Migration("20241109094918_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AcademicDegreesTeachers", b =>
                {
                    b.Property<int>("AcademicDegreesid_academicdegrees")
                        .HasColumnType("integer");

                    b.Property<int>("Teachersid_teachers")
                        .HasColumnType("integer");

                    b.HasKey("AcademicDegreesid_academicdegrees", "Teachersid_teachers");

                    b.HasIndex("Teachersid_teachers");

                    b.ToTable("TeacherAcademicDegrees", (string)null);
                });

            modelBuilder.Entity("ArsentyevaMashaKT3121.Properties.Models.AcademicDegrees", b =>
                {
                    b.Property<int>("id_academicdegrees")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_academicdegrees")
                        .HasComment("Идентификатор степени");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_academicdegrees"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("c_academicdegrees_title")
                        .HasComment("Учёная степень");

                    b.HasKey("id_academicdegrees")
                        .HasName("pk_cd_AcademicDegrees_id_academicdegrees");

                    b.ToTable("cd_AcademicDegrees", (string)null);
                });

            modelBuilder.Entity("ArsentyevaMashaKT3121.Properties.Models.Department", b =>
                {
                    b.Property<int>("id_departmet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_departmet")
                        .HasComment("Идентификатор кафедры");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_departmet"));

                    b.Property<int>("head_id")
                        .HasMaxLength(100)
                        .HasColumnType("integer")
                        .HasColumnName("c_department_head_id")
                        .HasComment("Заведущий кафедры:");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("c_department_name")
                        .HasComment("Название кафедры:");

                    b.HasKey("id_departmet")
                        .HasName("pk_cd_Department_id_departmet");

                    b.ToTable("cd_Department", (string)null);
                });

            modelBuilder.Entity("ArsentyevaMashaKT3121.Properties.Models.Positions", b =>
                {
                    b.Property<int>("id_positions")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_positions")
                        .HasComment("Идентификатор должности: ");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_positions"));

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("c_position_name")
                        .HasComment("Название должности: ");

                    b.HasKey("id_positions")
                        .HasName("pk_cd_Positionid_positions");

                    b.ToTable("cd_Position", (string)null);
                });

            modelBuilder.Entity("ArsentyevaMashaKT3121.Properties.Models.Subjects", b =>
                {
                    b.Property<int>("id_subjects")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_subjects")
                        .HasComment("Идентификатор дисциплины: ");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_subjects"));

                    b.Property<int>("department_id")
                        .HasMaxLength(100)
                        .HasColumnType("integer")
                        .HasColumnName("c_subjects_department_id")
                        .HasComment("Название кафедры: ");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("c_subjects_name")
                        .HasComment("Название дисциплины: ");

                    b.HasKey("id_subjects")
                        .HasName("pk_cd_Subjectsid_subjects");

                    b.ToTable("cd_Subjects", (string)null);
                });

            modelBuilder.Entity("ArsentyevaMashaKT3121.Properties.Models.Teachers", b =>
                {
                    b.Property<int>("id_teachers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_teachers")
                        .HasComment("Идентификатор преподавателя: ");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_teachers"));

                    b.Property<int>("academic_degree_id")
                        .HasMaxLength(100)
                        .HasColumnType("integer")
                        .HasColumnName("c_teachers_academic_degree_id")
                        .HasComment("Учёная степень преподавателя: ");

                    b.Property<int>("department_id")
                        .HasMaxLength(100)
                        .HasColumnType("integer")
                        .HasColumnName("c_teachers_department_id")
                        .HasComment("Кафедра на которой работает преподаватель: ");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("c_teachers_full_name")
                        .HasComment("ФИО преподавателя: ");

                    b.Property<int>("position_id")
                        .HasMaxLength(100)
                        .HasColumnType("integer")
                        .HasColumnName("c_teachers_position_id")
                        .HasComment("Должность преподавателя: ");

                    b.HasKey("id_teachers")
                        .HasName("pk_cd_Teachersid_teachers");

                    b.ToTable("cd_Teachers", (string)null);
                });

            modelBuilder.Entity("ArsentyevaMashaKT3121.Properties.Models.Workload", b =>
                {
                    b.Property<int>("id_workload")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_workload")
                        .HasComment("Идентификатор нагрузки в часах: ");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_workload"));

                    b.Property<int>("lecture_horus")
                        .HasMaxLength(100)
                        .HasColumnType("integer")
                        .HasColumnName("c_workload_lecture_horus")
                        .HasComment("Лекционные часы: ");

                    b.Property<int>("practice_hours")
                        .HasMaxLength(100)
                        .HasColumnType("integer")
                        .HasColumnName("c_workload_practice_hours")
                        .HasComment("Практические часы: ");

                    b.Property<int>("subject_id")
                        .HasMaxLength(100)
                        .HasColumnType("integer")
                        .HasColumnName("c_workload_subject_id")
                        .HasComment("Идентификатор дисциплины: ");

                    b.Property<int>("teacher_id")
                        .HasMaxLength(100)
                        .HasColumnType("integer")
                        .HasColumnName("c_workload_teacher_id")
                        .HasComment("Идентификатор преподавателя: ");

                    b.HasKey("id_workload")
                        .HasName("pk_cd_Workloadid_workload");

                    b.ToTable("cd_Workload", (string)null);
                });

            modelBuilder.Entity("DepartmentTeachers", b =>
                {
                    b.Property<int>("Departmentid_departmet")
                        .HasColumnType("integer");

                    b.Property<int>("Teachersid_teachers")
                        .HasColumnType("integer");

                    b.HasKey("Departmentid_departmet", "Teachersid_teachers");

                    b.HasIndex("Teachersid_teachers");

                    b.ToTable("TeacherDepartment", (string)null);
                });

            modelBuilder.Entity("PositionsTeachers", b =>
                {
                    b.Property<int>("Positionsid_positions")
                        .HasColumnType("integer");

                    b.Property<int>("Teachersid_teachers")
                        .HasColumnType("integer");

                    b.HasKey("Positionsid_positions", "Teachersid_teachers");

                    b.HasIndex("Teachersid_teachers");

                    b.ToTable("TeacherPosition", (string)null);
                });

            modelBuilder.Entity("SubjectsTeachers", b =>
                {
                    b.Property<int>("Subjectsid_subjects")
                        .HasColumnType("integer");

                    b.Property<int>("Teachersid_teachers")
                        .HasColumnType("integer");

                    b.HasKey("Subjectsid_subjects", "Teachersid_teachers");

                    b.HasIndex("Teachersid_teachers");

                    b.ToTable("TeacherSubjects", (string)null);
                });

            modelBuilder.Entity("TeachersWorkload", b =>
                {
                    b.Property<int>("Teachersid_teachers")
                        .HasColumnType("integer");

                    b.Property<int>("Workloadid_workload")
                        .HasColumnType("integer");

                    b.HasKey("Teachersid_teachers", "Workloadid_workload");

                    b.HasIndex("Workloadid_workload");

                    b.ToTable("TeacherWorkload", (string)null);
                });

            modelBuilder.Entity("AcademicDegreesTeachers", b =>
                {
                    b.HasOne("ArsentyevaMashaKT3121.Properties.Models.AcademicDegrees", null)
                        .WithMany()
                        .HasForeignKey("AcademicDegreesid_academicdegrees")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArsentyevaMashaKT3121.Properties.Models.Teachers", null)
                        .WithMany()
                        .HasForeignKey("Teachersid_teachers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DepartmentTeachers", b =>
                {
                    b.HasOne("ArsentyevaMashaKT3121.Properties.Models.Department", null)
                        .WithMany()
                        .HasForeignKey("Departmentid_departmet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArsentyevaMashaKT3121.Properties.Models.Teachers", null)
                        .WithMany()
                        .HasForeignKey("Teachersid_teachers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PositionsTeachers", b =>
                {
                    b.HasOne("ArsentyevaMashaKT3121.Properties.Models.Positions", null)
                        .WithMany()
                        .HasForeignKey("Positionsid_positions")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArsentyevaMashaKT3121.Properties.Models.Teachers", null)
                        .WithMany()
                        .HasForeignKey("Teachersid_teachers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SubjectsTeachers", b =>
                {
                    b.HasOne("ArsentyevaMashaKT3121.Properties.Models.Subjects", null)
                        .WithMany()
                        .HasForeignKey("Subjectsid_subjects")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArsentyevaMashaKT3121.Properties.Models.Teachers", null)
                        .WithMany()
                        .HasForeignKey("Teachersid_teachers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TeachersWorkload", b =>
                {
                    b.HasOne("ArsentyevaMashaKT3121.Properties.Models.Teachers", null)
                        .WithMany()
                        .HasForeignKey("Teachersid_teachers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArsentyevaMashaKT3121.Properties.Models.Workload", null)
                        .WithMany()
                        .HasForeignKey("Workloadid_workload")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
